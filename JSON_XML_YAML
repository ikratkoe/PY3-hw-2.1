JSON – это языконезависимый текстовый формат обмена данными. Обычно используется при обмене данными между браузером и сервером. ( PHP - JS ) . Формат JSON (JavaScript Object Notation).
JSON-текст представляет собой (в закодированном виде) одну из двух структур:
1.  Набор пар ключ: значение. Может быть вложенным . В различных языках это реализовано как объект, запись, структура, словарь, хэш-таблица, список с ключом или ассоциативный массив. Ключом может быть только строка (регистрозависимая: имена с буквами в разных регистрах считаются разными[3]), значением — любая форма.
2. Упорядоченный набор значений. Во многих языках это реализовано как массив, вектор, список или последовательность.

Пример JSON файла :

{
   "firstName": "Иван",
   "lastName": "Иванов",
   "address": {
       "streetAddress": "Московское ш., 101, кв.101",
       "city": "Ленинград",
       "postalCode": 101101
   },
   "phoneNumbers": [
       "812 123-1234",
       "916 123-4567"
   ]
}

----------------------------------------------------------------------------------------------------

XML
eXtensible Markup Language) — расширяемый язык разметки . Спецификация XML описывает язык и ряд вопросов, касающихся кодировки и обработки документов. Поддерживает DOM обьектную модель документа .
Физическая структура:
Сущность — мельчайшая часть в документе. Все сущности что-нибудь содержат, и у всех них есть имя.
Документ состоит из сущностей, содержание которых — символы. Все они разделены на два типа: символьные данные (англ. character data) и разметки. К разметке принадлежат: теги (англ. tags), обозначающие границы элементов, объявления и инструкции обработки, включая их атрибуты (англ. attributes), ссылки на сущности, комментарии, а также последовательности символов, обрамляющие секции «CDATA». Часть документа, не принадлежащая разметке, составляет символьные данные документа.
Логическая структура:
Все составляющие части документа обобщаются в пролог и корневой элемент. Корневой элемент — обязательная часть документа, составляющая всю его суть (пролог, вообще говоря, может отсутствовать). Может включать (а может не включать) вложенные в него элементы и символьные данные, а также комментарии. Вложенные в корневой элемент элементы, в свою очередь, могут включать вложенные в них элементы, символьные данные и комментарии, и так далее. Пролог может включать объявления, инструкции обработки, комментарии. Его следует начинать с объявления XML, хотя в определённой ситуации допускается отсутствие этого объявления.
Элементы документа должны быть правильно вложены: любой элемент, начинающийся внутри другого элемента (то есть любой элемент документа, кроме корневого), должен заканчиваться внутри элемента, в котором он начался.
Пример XML файла :

<person firstName="Иван" lastName="Иванов">
  <address streetAddress="Московское ш., 101, кв.101" city="Ленинград" postalCode="101101" />
  <phoneNumbers>
    <phoneNumber>812 123-1234</phoneNumber>
    <phoneNumber>916 123-4567</phoneNumber>
  </phoneNumbers>
</person>


----------------------------------------------------------------------------------------------------

YAML (Ain't Markup Language)  = НЕ язык разметки . Акцент да данные , а не на разметку . Текстовый формат . Сделан , что бы сделать более читаемыми большие конфиг. файлы JSON . На habrahabr.ru есть сравнение по скорости обработки , JSON  ( читается ) быстрее в три раза . Json более распространен , чем YAML в поддержке разных языков .

Пример YAML :
bindings:
  - ircEvent: PRIVMSG
    method: newUri
    regexp: '^http://.*'
  - ircEvent: PRIVMSG
    method: deleteUri
    regexp: '^delete.*'
  - ircEvent: PRIVMSG
    method: randomUri
    regexp: '^random.*'


